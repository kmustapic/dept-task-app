{"ast":null,"code":"```jsx\n// src/components/SolutionPage.jsx\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { doRequest } from '../utils/api';\nimport logo from '../images/dept-logo.png';\nimport BackToHomeButton from './BackToHomeButton';\n\nexport default function SolutionPage({ token, message, logout, setMessage }) {\n  const navigate = useNavigate();\n  const [countries, setCountries] = useState([]);\n  const [saved, setSaved] = useState([]);\n\n  // Redirect if not logged in\n  useEffect(() => {\n    if (!token) {\n      navigate('/');\n    }\n  }, [token, navigate]);\n\n  // Load saved countries from localStorage on mount\n  useEffect(() => {\n    const stored = localStorage.getItem('savedCountries');\n    if (stored) {\n      setSaved(JSON.parse(stored));\n    }\n  }, []);\n\n  // Persist saved list to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('savedCountries', JSON.stringify(saved));\n  }, [saved]);\n\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Fetch random countries using doRequest\n  const fetchCountries = async () => {\n    const data = await doRequest({\n      url: 'https://bootcamp2025.depster.me/api/countries',\n      method: 'GET',\n      body: null,\n      token,\n      setMessage,\n    });\n    if (data) {\n      setCountries(data);\n    }\n  };\n\n  // Save a country to the list (avoid duplicates)\n  const saveCountry = (country) => {\n    if (!saved.find((c) => c.code === country.code)) {\n      setSaved([...saved, country]);\n    }\n  };\n\n  // Remove a country from the list\n  const removeCountry = (code) => {\n    setSaved(saved.filter((c) => c.code !== code));\n  };\n\n  return (\n    <div className=\"relative flex flex-col items-center justify-center min-h-screen px-4\">\n      {/* Logo and Back button */}\n      <div className=\"absolute top-4 left-4 flex items-center space-x-2\">\n        <img src={logo} alt=\"Dept Logo\" className=\"w-20 h-auto\" />\n        <BackToHomeButton />\n      </div>\n\n      {/* Logout button */}\n      {token && (\n        <button onClick={handleLogout} className=\"btn absolute top-4 right-4\">\n          Log out\n        </button>\n      )}\n\n      <h1 className=\"text-6xl font-bold text-gray-800 mb-8 text-center\">\n        Dept Bootcamp App\n      </h1>\n\n      {/* Show any message */}\n      {message.text && (\n        <div className={message.type === 'error' ? 'error-message' : 'success-message'}>\n          {message.text}\n        </div>\n      )}\n\n      {/* Fetch button */}\n      <button onClick={fetchCountries} className=\"btn mb-6\">\n        Fetch Countries\n      </button>\n\n      {/* Display fetched countries with Save option */}\n      {countries.length > 0 && (\n        <div className=\"w-full max-w-3xl mb-8\">\n          <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Random Countries:</h2>\n          <ul className=\"space-y-4\">\n            {countries.map((country) => (\n              <li\n                key={country.code}\n                className=\"flex justify-between items-center bg-white p-4 rounded shadow\"\n              >\n                <span>{country.name}</span>\n                <button\n                  onClick={() => saveCountry(country)}\n                  className=\"btn px-3 py-1 text-sm\"\n                >\n                  Save\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Display saved list with Remove option */}\n      {saved.length > 0 && (\n        <div className=\"w-full max-w-3xl\">\n          <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Saved Countries:</h2>\n          <ul className=\"space-y-4\">\n            {saved.map((country) => (\n              <li\n                key={country.code}\n                className=\"flex justify-between items-center bg-white p-4 rounded shadow\"\n              >\n                <span>{country.name}</span>\n                <button\n                  onClick={() => removeCountry(country.code)}\n                  className=\"btn bg-red-500 hover:bg-red-700 px-3 py-1 text-sm\"\n                >\n                  Remove\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n```;","map":{"version":3,"names":[],"sources":["C:/Users/Korisnik/Desktop/Kristina/TEMP FAKS/dept-task-app/src/components/SolutionPage.jsx"],"sourcesContent":["```jsx\r\n// src/components/SolutionPage.jsx\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { doRequest } from '../utils/api';\r\nimport logo from '../images/dept-logo.png';\r\nimport BackToHomeButton from './BackToHomeButton';\r\n\r\nexport default function SolutionPage({ token, message, logout, setMessage }) {\r\n  const navigate = useNavigate();\r\n  const [countries, setCountries] = useState([]);\r\n  const [saved, setSaved] = useState([]);\r\n\r\n  // Redirect if not logged in\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  // Load saved countries from localStorage on mount\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('savedCountries');\r\n    if (stored) {\r\n      setSaved(JSON.parse(stored));\r\n    }\r\n  }, []);\r\n\r\n  // Persist saved list to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('savedCountries', JSON.stringify(saved));\r\n  }, [saved]);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');\r\n  };\r\n\r\n  // Fetch random countries using doRequest\r\n  const fetchCountries = async () => {\r\n    const data = await doRequest({\r\n      url: 'https://bootcamp2025.depster.me/api/countries',\r\n      method: 'GET',\r\n      body: null,\r\n      token,\r\n      setMessage,\r\n    });\r\n    if (data) {\r\n      setCountries(data);\r\n    }\r\n  };\r\n\r\n  // Save a country to the list (avoid duplicates)\r\n  const saveCountry = (country) => {\r\n    if (!saved.find((c) => c.code === country.code)) {\r\n      setSaved([...saved, country]);\r\n    }\r\n  };\r\n\r\n  // Remove a country from the list\r\n  const removeCountry = (code) => {\r\n    setSaved(saved.filter((c) => c.code !== code));\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col items-center justify-center min-h-screen px-4\">\r\n      {/* Logo and Back button */}\r\n      <div className=\"absolute top-4 left-4 flex items-center space-x-2\">\r\n        <img src={logo} alt=\"Dept Logo\" className=\"w-20 h-auto\" />\r\n        <BackToHomeButton />\r\n      </div>\r\n\r\n      {/* Logout button */}\r\n      {token && (\r\n        <button onClick={handleLogout} className=\"btn absolute top-4 right-4\">\r\n          Log out\r\n        </button>\r\n      )}\r\n\r\n      <h1 className=\"text-6xl font-bold text-gray-800 mb-8 text-center\">\r\n        Dept Bootcamp App\r\n      </h1>\r\n\r\n      {/* Show any message */}\r\n      {message.text && (\r\n        <div className={message.type === 'error' ? 'error-message' : 'success-message'}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n\r\n      {/* Fetch button */}\r\n      <button onClick={fetchCountries} className=\"btn mb-6\">\r\n        Fetch Countries\r\n      </button>\r\n\r\n      {/* Display fetched countries with Save option */}\r\n      {countries.length > 0 && (\r\n        <div className=\"w-full max-w-3xl mb-8\">\r\n          <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Random Countries:</h2>\r\n          <ul className=\"space-y-4\">\r\n            {countries.map((country) => (\r\n              <li\r\n                key={country.code}\r\n                className=\"flex justify-between items-center bg-white p-4 rounded shadow\"\r\n              >\r\n                <span>{country.name}</span>\r\n                <button\r\n                  onClick={() => saveCountry(country)}\r\n                  className=\"btn px-3 py-1 text-sm\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Display saved list with Remove option */}\r\n      {saved.length > 0 && (\r\n        <div className=\"w-full max-w-3xl\">\r\n          <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Saved Countries:</h2>\r\n          <ul className=\"space-y-4\">\r\n            {saved.map((country) => (\r\n              <li\r\n                key={country.code}\r\n                className=\"flex justify-between items-center bg-white p-4 rounded shadow\"\r\n              >\r\n                <span>{country.name}</span>\r\n                <button\r\n                  onClick={() => removeCountry(country.code)}\r\n                  className=\"btn bg-red-500 hover:bg-red-700 px-3 py-1 text-sm\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n```\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}