{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\Kristina\\\\TEMP FAKS\\\\dept-task-app\\\\src\\\\components\\\\TaskPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/TaskPage.jsx\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../images/dept-logo.png';\nimport BackButton from './BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskPage({\n  token,\n  task,\n  getTask,\n  message,\n  logout\n}) {\n  _s();\n  var _task$data, _task$data2;\n  const navigate = useNavigate();\n\n  // Redirect to home if not logged in\n  useEffect(() => {\n    if (!token) {\n      navigate('/');\n    }\n  }, [token, navigate]);\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Extract name & description from the task object\n  const name = (task === null || task === void 0 ? void 0 : (_task$data = task.data) === null || _task$data === void 0 ? void 0 : _task$data.name) || '';\n  const descriptionRaw = (task === null || task === void 0 ? void 0 : (_task$data2 = task.data) === null || _task$data2 === void 0 ? void 0 : _task$data2.description) || '';\n\n  // Split into paragraphs on real blank lines\n  const paragraphs = descriptionRaw.split(/\\n\\s*\\n/).map(p => p.trim()).filter(p => p.length > 0);\n\n  // Regex to detect URLs (with or without protocol)\n  const urlRegex = /((?:https?:\\/\\/)?[^\\s/$.?#].[^\\s]*)/g;\n\n  // Renders a paragraph, wrapping detected URLs in <strong>\n  const renderParagraph = (para, idx) => {\n    const parts = [];\n    let lastIndex = 0;\n    para.replace(urlRegex, (match, url, offset) => {\n      // push preceding text\n      if (offset > lastIndex) {\n        parts.push(para.slice(lastIndex, offset));\n      }\n      // push the URL bolded\n      parts.push(/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: match\n      }, `${idx}-${offset}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n      lastIndex = offset + match.length;\n    });\n    // push any remaining text\n    if (lastIndex < para.length) {\n      parts.push(para.slice(lastIndex));\n    }\n    // if no URL was found, just return the original text\n    if (parts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: para\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: parts\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-0 left-0 w-full bg-gray-100 z-20 flex items-center justify-between px-4 py-2 shadow-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Dept Logo\",\n          className: \"w-12 h-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BackButton, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"btn\",\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getTask,\n        className: \"btn\",\n        children: \"Show Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white p-6 rounded shadow mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800 mb-6\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4 text-gray-700\",\n        children: paragraphs.map((para, idx) => renderParagraph(para, idx))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.type === 'error' ? 'error-message' : 'success-message',\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["useEffect","useNavigate","logo","BackButton","jsxDEV","_jsxDEV","TaskPage","token","task","getTask","message","logout","_s","_task$data","_task$data2","navigate","handleLogout","name","data","descriptionRaw","description","paragraphs","split","map","p","trim","filter","length","urlRegex","renderParagraph","para","idx","parts","lastIndex","replace","match","url","offset","push","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","to","onClick","text","type","_c","$RefreshReg$"],"sources":["C:/Users/Korisnik/Desktop/Kristina/TEMP FAKS/dept-task-app/src/components/TaskPage.jsx"],"sourcesContent":["// src/components/TaskPage.jsx\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logo from '../images/dept-logo.png';\r\nimport BackButton from './BackButton';\r\n\r\nexport default function TaskPage({ token, task, getTask, message, logout }) {\r\n  const navigate = useNavigate();\r\n\r\n  // Redirect to home if not logged in\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');\r\n  };\r\n\r\n  // Extract name & description from the task object\r\n  const name = task?.data?.name || '';\r\n  const descriptionRaw = task?.data?.description || '';\r\n\r\n  // Split into paragraphs on real blank lines\r\n  const paragraphs = descriptionRaw\r\n    .split(/\\n\\s*\\n/)\r\n    .map((p) => p.trim())\r\n    .filter((p) => p.length > 0);\r\n\r\n  // Regex to detect URLs (with or without protocol)\r\n  const urlRegex = /((?:https?:\\/\\/)?[^\\s/$.?#].[^\\s]*)/g;\r\n\r\n  // Renders a paragraph, wrapping detected URLs in <strong>\r\n  const renderParagraph = (para, idx) => {\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    para.replace(urlRegex, (match, url, offset) => {\r\n      // push preceding text\r\n      if (offset > lastIndex) {\r\n        parts.push(para.slice(lastIndex, offset));\r\n      }\r\n      // push the URL bolded\r\n      parts.push(\r\n        <strong key={`${idx}-${offset}`}>{match}</strong>\r\n      );\r\n      lastIndex = offset + match.length;\r\n    });\r\n    // push any remaining text\r\n    if (lastIndex < para.length) {\r\n      parts.push(para.slice(lastIndex));\r\n    }\r\n    // if no URL was found, just return the original text\r\n    if (parts.length === 0) {\r\n      return <p key={idx}>{para}</p>;\r\n    }\r\n    return <p key={idx}>{parts}</p>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen bg-gray-100\">\r\n      {/* Fixed Top Bar */}\r\n      <div className=\"fixed top-0 left-0 w-full bg-gray-100 z-20 flex items-center justify-between px-4 py-2 shadow-none\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <img src={logo} alt=\"Dept Logo\" className=\"w-12 h-auto\" />\r\n          <BackButton to=\"/\" />\r\n        </div>\r\n        {token && (\r\n          <button onClick={handleLogout} className=\"btn\">\r\n            Log out\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Spacer */}\r\n      <div className=\"pt-16\" />\r\n\r\n      {/* Show Task button */}\r\n      <div className=\"w-full flex justify-center mb-6\">\r\n        <button onClick={getTask} className=\"btn\">\r\n          Show Task\r\n        </button>\r\n      </div>\r\n\r\n      {/* Task content */}\r\n      {task && (\r\n        <div className=\"max-w-3xl mx-auto bg-white p-6 rounded shadow mb-8\">\r\n          {/* Title */}\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">{name}</h1>\r\n          {/* Paragraphs with URL highlighting */}\r\n          <div className=\"space-y-4 text-gray-700\">\r\n            {paragraphs.map((para, idx) => renderParagraph(para, idx))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Optional message */}\r\n      {message.text && (\r\n        <div className=\"w-full flex justify-center mb-2\">\r\n          <div className={message.type === 'error' ? 'error-message' : 'success-message'}>\r\n            {message.text}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,UAAA,EAAAC,WAAA;EAC1E,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,KAAK,EAAE;MACVQ,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACR,KAAK,EAAEQ,QAAQ,CAAC,CAAC;EAErB,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBL,MAAM,CAAC,CAAC;IACRI,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;;EAED;EACA,MAAME,IAAI,GAAG,CAAAT,IAAI,aAAJA,IAAI,wBAAAK,UAAA,GAAJL,IAAI,CAAEU,IAAI,cAAAL,UAAA,uBAAVA,UAAA,CAAYI,IAAI,KAAI,EAAE;EACnC,MAAME,cAAc,GAAG,CAAAX,IAAI,aAAJA,IAAI,wBAAAM,WAAA,GAAJN,IAAI,CAAEU,IAAI,cAAAJ,WAAA,uBAAVA,WAAA,CAAYM,WAAW,KAAI,EAAE;;EAEpD;EACA,MAAMC,UAAU,GAAGF,cAAc,CAC9BG,KAAK,CAAC,SAAS,CAAC,CAChBC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACpBC,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACG,MAAM,GAAG,CAAC,CAAC;;EAE9B;EACA,MAAMC,QAAQ,GAAG,sCAAsC;;EAEvD;EACA,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAK;IACrC,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,SAAS,GAAG,CAAC;IACjBH,IAAI,CAACI,OAAO,CAACN,QAAQ,EAAE,CAACO,KAAK,EAAEC,GAAG,EAAEC,MAAM,KAAK;MAC7C;MACA,IAAIA,MAAM,GAAGJ,SAAS,EAAE;QACtBD,KAAK,CAACM,IAAI,CAACR,IAAI,CAACS,KAAK,CAACN,SAAS,EAAEI,MAAM,CAAC,CAAC;MAC3C;MACA;MACAL,KAAK,CAACM,IAAI,cACRjC,OAAA;QAAAmC,QAAA,EAAkCL;MAAK,GAA1B,GAAGJ,GAAG,IAAIM,MAAM,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClD,CAAC;MACDX,SAAS,GAAGI,MAAM,GAAGF,KAAK,CAACR,MAAM;IACnC,CAAC,CAAC;IACF;IACA,IAAIM,SAAS,GAAGH,IAAI,CAACH,MAAM,EAAE;MAC3BK,KAAK,CAACM,IAAI,CAACR,IAAI,CAACS,KAAK,CAACN,SAAS,CAAC,CAAC;IACnC;IACA;IACA,IAAID,KAAK,CAACL,MAAM,KAAK,CAAC,EAAE;MACtB,oBAAOtB,OAAA;QAAAmC,QAAA,EAAcV;MAAI,GAAVC,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAChC;IACA,oBAAOvC,OAAA;MAAAmC,QAAA,EAAcR;IAAK,GAAXD,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EACjC,CAAC;EAED,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,mCAAmC;IAAAL,QAAA,gBAEhDnC,OAAA;MAAKwC,SAAS,EAAC,oGAAoG;MAAAL,QAAA,gBACjHnC,OAAA;QAAKwC,SAAS,EAAC,6BAA6B;QAAAL,QAAA,gBAC1CnC,OAAA;UAAKyC,GAAG,EAAE5C,IAAK;UAAC6C,GAAG,EAAC,WAAW;UAACF,SAAS,EAAC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DvC,OAAA,CAACF,UAAU;UAAC6C,EAAE,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,EACLrC,KAAK,iBACJF,OAAA;QAAQ4C,OAAO,EAAEjC,YAAa;QAAC6B,SAAS,EAAC,KAAK;QAAAL,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNvC,OAAA;MAAKwC,SAAS,EAAC;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGzBvC,OAAA;MAAKwC,SAAS,EAAC,iCAAiC;MAAAL,QAAA,eAC9CnC,OAAA;QAAQ4C,OAAO,EAAExC,OAAQ;QAACoC,SAAS,EAAC,KAAK;QAAAL,QAAA,EAAC;MAE1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLpC,IAAI,iBACHH,OAAA;MAAKwC,SAAS,EAAC,oDAAoD;MAAAL,QAAA,gBAEjEnC,OAAA;QAAIwC,SAAS,EAAC,uCAAuC;QAAAL,QAAA,EAAEvB;MAAI;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEjEvC,OAAA;QAAKwC,SAAS,EAAC,yBAAyB;QAAAL,QAAA,EACrCnB,UAAU,CAACE,GAAG,CAAC,CAACO,IAAI,EAAEC,GAAG,KAAKF,eAAe,CAACC,IAAI,EAAEC,GAAG,CAAC;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAlC,OAAO,CAACwC,IAAI,iBACX7C,OAAA;MAAKwC,SAAS,EAAC,iCAAiC;MAAAL,QAAA,eAC9CnC,OAAA;QAAKwC,SAAS,EAAEnC,OAAO,CAACyC,IAAI,KAAK,OAAO,GAAG,eAAe,GAAG,iBAAkB;QAAAX,QAAA,EAC5E9B,OAAO,CAACwC;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChC,EAAA,CArGuBN,QAAQ;EAAA,QACbL,WAAW;AAAA;AAAAmD,EAAA,GADN9C,QAAQ;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}