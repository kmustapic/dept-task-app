{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\Kristina\\\\TEMP FAKS\\\\dept-task-app\\\\src\\\\components\\\\TaskPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskPage({\n  token,\n  task,\n  getTask,\n  message,\n  logout\n}) {\n  _s();\n  var _task$data, _task$data2;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!token) {\n      navigate('/');\n    }\n  }, [token, navigate]);\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  // Extract name & description from the task object\n  const name = (task === null || task === void 0 ? void 0 : (_task$data = task.data) === null || _task$data === void 0 ? void 0 : _task$data.name) || '';\n  const descriptionRaw = (task === null || task === void 0 ? void 0 : (_task$data2 = task.data) === null || _task$data2 === void 0 ? void 0 : _task$data2.description) || '';\n\n  // Split into paragraphs on actual newlines (\\n\\n)\n  const paragraphs = descriptionRaw.split(/\\n\\s*\\n/) // split on blank-line sequences\n  .map(p => p.trim()).filter(p => p.length > 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-0 left-0 w-full bg-gray-100 z-20 flex items-center justify-between px-4 py-2 shadow-none\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        backTo: \"/\",\n        token: token,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"btn\",\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getTask,\n        className: \"btn\",\n        children: \"Show Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white p-6 rounded shadow mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800 mb-6\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4 text-gray-700\",\n        children: paragraphs.map((para, idx) => {\n          // within each paragraph, preserve single newlines\n          const lines = para.split(/\\n/);\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [line, i < lines.length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 48\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this))\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.type === 'error' ? 'error-message' : 'success-message',\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["useEffect","useNavigate","Navbar","jsxDEV","_jsxDEV","TaskPage","token","task","getTask","message","logout","_s","_task$data","_task$data2","navigate","handleLogout","name","data","descriptionRaw","description","paragraphs","split","map","p","trim","filter","length","className","children","backTo","fileName","_jsxFileName","lineNumber","columnNumber","onClick","para","idx","lines","line","i","text","type","_c","$RefreshReg$"],"sources":["C:/Users/Korisnik/Desktop/Kristina/TEMP FAKS/dept-task-app/src/components/TaskPage.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nexport default function TaskPage({ token, task, getTask, message, logout }) {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');\r\n  };\r\n\r\n  // Extract name & description from the task object\r\n  const name = task?.data?.name || '';\r\n  const descriptionRaw = task?.data?.description || '';\r\n\r\n  // Split into paragraphs on actual newlines (\\n\\n)\r\n  const paragraphs = descriptionRaw\r\n    .split(/\\n\\s*\\n/)          // split on blank-line sequences\r\n    .map(p => p.trim())\r\n    .filter(p => p.length > 0);\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen bg-gray-100\">\r\n      {/* Fixed Top Bar */}\r\n      <div className=\"fixed top-0 left-0 w-full bg-gray-100 z-20 flex items-center justify-between px-4 py-2 shadow-none\">\r\n        <Navbar backTo=\"/\" token={token} logout={logout} />\r\n        {token && (\r\n          <button onClick={handleLogout} className=\"btn\">\r\n            Log out\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Spacer */}\r\n      <div className=\"pt-16\" />\r\n\r\n      {/* Show Task button */}\r\n      <div className=\"w-full flex justify-center mb-6\">\r\n        <button onClick={getTask} className=\"btn\">\r\n          Show Task\r\n        </button>\r\n        \r\n      </div>\r\n\r\n      {/* Task content */}\r\n      {task && (\r\n        <div className=\"max-w-3xl mx-auto bg-white p-6 rounded shadow mb-8\">\r\n          {/* Title */}\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">{name}</h1>\r\n          {/* Paragraphs */}\r\n          <div className=\"space-y-4 text-gray-700\">\r\n            {paragraphs.map((para, idx) => {\r\n              // within each paragraph, preserve single newlines\r\n              const lines = para.split(/\\n/);\r\n              return (\r\n                <p key={idx}>\r\n                  {lines.map((line, i) => (\r\n                    <span key={i}>\r\n                      {line}\r\n                      {i < lines.length - 1 && <br />}\r\n                    </span>\r\n                  ))}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Optional message */}\r\n      {message.text && (\r\n        <div className=\"w-full flex justify-center mb-2\">\r\n          <div className={message.type === 'error' ? 'error-message' : 'success-message'}>\r\n            {message.text}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}